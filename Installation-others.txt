Docker-shellrunservers
>> docker network create appnet

Docker WHO ICD-11 - https://icd.who.int/icdapi/docs2/ICDAPI-Container-Readme/
>> # WHO Docker Hub - https://hub.docker.com/r/whoicd/icd-api
>> docker pull whoicd/icd-api
>> docker run -p 80:80 -e acceptLicense=true -e saveAnalytics=true whoicd/icd-api
>> @ -e acceptLicense=true : is a required parameter which means you agree with the license agreement
>> @ -e saveAnalytics=true : If you set this option to true, the container that is deployed can send data to WHO on the searches made in order to improve search capability of ICD-11 tools. The data that is sent does not contain any ids or ip addresses.
>> docker run -it --rm --name=whoicd --network=appnet -p 80:80 -e acceptLicense=true -e saveAnalytics=true whoicd/icd-api
>> docker run --rm --name=whoicd --network=appnet -p 80:80 -e acceptLicense=true -e saveAnalytics=true -d whoicd/icd-api
>>
>> docker logs -f whoicd
>> docker exec -it whoicd sh
>> docker stop whoicd
>>
>> # Container swagger endpoint /swagger/index.html
>> http://localhost/swagger/index.html
>> # ICD-11 Coding Tool application
>> http://localhost/ct11

Docker-superset
>> # Option-1
>> git clone https://github.com/apache/incubator-superset/ superset/
>> <cd superset/contrib/docker/>docker build -t superset .
>> docker-compose run --rm --name superset1 superset ./docker-init.sh
>> docker network connect appnet postgres1
>> docker network connect appnet redis1
>> # Option-2
>> git clone https://github.com/apache/incubator-superset.git superset/
>> <cd superset/>docker-compose up
>>
>> docker-compose up -d
>> docker logs -f superset1
>> docker exec -it superset1 bash
>> docker stop superset1
>>
>> # Initialize the database
>> docker exec -it superset1 superset db upgrade
>> # Load some data to play with
>> docker exec -it superset1 superset load_examples
>> # Create default roles and permissions
>> docker exec -it superset1 superset init

Docker-metabase
>> docker pull metabase/metabase:latest
>> docker run -it --rm -p 3000:3000 metabase/metabase
>> docker run --rm --name=metabase1 --link postgres1 --link mysql1 -p 3000:3000 -d metabase/metabase
>> docker run --rm --name=metabase1 --network=appnet --env 'MB_DB_TYPE=postgres' --env 'MB_DB_DBNAME=metabase' --env 'MB_DB_PORT=5432' --env 'MB_DB_USER=postgres' --env 'MB_DB_PASS=password' --env 'MB_DB_HOST=postgres1' -p 3000:3000 -d metabase/metabase
>> docker run --rm --name=metabase1 --network=appnet --env 'MB_DB_TYPE=mysql' --env 'MB_DB_DBNAME=metabase' --env 'MB_DB_PORT=3306' --env 'MB_DB_USER=root' --env 'MB_DB_PASS=password' --env 'MB_DB_HOST=mysql1' -p 3000:3000 -d metabase/metabase
>> docker logs -f metabase1
>> docker exec -it metabase1 bash
>> docker stop metabase1

Docker-keenio
>> git clone https://github.com/keen/dashboards.git keen/dashboards
>> <cd keen/dashboards>docker build -t keen/dashboards .
>> docker run -it --rm -p 80:80 keen/dashboards
>> docker run --rm --name=keenio1 --link postgres1 --link mysql1 -p 80:80 -d keen/dashboards
>> docker run --rm --name=keenio1 --network=appnet -p 80:80 -d keen/dashboards
>> docker logs -f keenio1
>> docker exec -it keenio1 bash
>> docker stop keenio1

Docker-bigdata-apahce-nifi
>> docker pull apache/nifi:latest
>> docker run --rm --entrypoint /bin/bash apache/nifi -c 'env | grep NIFI'
>>        NIFI_PID_DIR=/opt/nifi/nifi-current/run
>>        NIFI_LOG_DIR=/opt/nifi/nifi-current/logs
>>        NIFI_TOOLKIT_HOME=/opt/nifi/nifi-toolkit-current
>>        NIFI_HOME=/opt/nifi/nifi-current
>>        NIFI_BASE_DIR=/opt/nifi
>> docker run -it --name nifi -p 8080:8080 apache/nifi
>> docker run --rm --name nifi --network=appnet -p 8080:8080 -d apache/nifi
>> docker exec -it nifi /opt/nifi/nifi-toolkit-current/bin/cli.sh nifi current-user
>>
>> NiFi instance UI to the host system on at port 8080, viewable at:
>> http://localhost:8080/nifi
