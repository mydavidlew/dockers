# [[[Deploying Elasticsearch on Kubernetes]]]
# Elasticsearch node discovery through Headless Service & Elasticsearch cluster using StatefulSet
# https://blog.knoldus.com/deploying-elasticsearch-on-kubernetes/
#
# We have used multiple initContainers to setup our node before running the Elasticsearch image. Let us look into them one-by-one:
# - fix-the-volume-permission: This is to fix the volume permission because by default Elasticsearch container is not run as non root user.
# - increase-the-vm-max-map-count: This is used to increace the default vm.max_map_count to 262144
# - increase-the-ulimit: Used for increasing the ulimit
#
# <cmd> kubectl apply -f elasticsearch-deploy.yaml
# <cmd> kubectl port-forward -n myspace statefulset/elasticsearch 9200:9200
#
# elasticsearch-storage.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: rancher.io/local-path
volumeBindingMode: WaitForFirstConsumer
---
# elasticsearch-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: myspace
  labels:
    service: elasticsearch
spec:
  clusterIP: None
  ports:
  - name: serving
    port: 9200
    targetPort: 9200
    protocol: TCP
  - name: node-to-node
    port: 9300
    targetPort: 9300
    protocol: TCP
  selector:
    service: elasticsearch
---
# elasticsearch-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: myspace
  labels:
    service: elasticsearch
spec:
  replicas: 3
  serviceName: elasticsearch
  selector:
    matchLabels:
      service: elasticsearch
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: local-storage
      resources:
        requests:
          storage: 10Gi
  template:
    metadata:
      labels:
        service: elasticsearch
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - elasticsearch
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: fix-the-volume-permission
        image: busybox
        command:
        - sh
        - -c
        - chown -R 1000:1000 /usr/share/elasticsearch/data
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-the-vm-max-map-count
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      - name: increase-the-ulimit
        image: busybox
        command:
        - sh
        - -c
        - ulimit -n 65536
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: tcp
        resources:
          requests:
            memory: 1Gi
          limits:
            memory: 2Gi
        env:
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
#         - name: bootstrap.memory_lock
#           value: "true"
          - name: cluster.name
            value: elasticsearch-cluster
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: discovery.seed_hosts
            value: "elasticsearch-0.elasticsearch.myspace.svc.cluster.local,elasticsearch-1.elasticsearch.myspace.svc.cluster.local,elasticsearch-2.elasticsearch.myspace.svc.cluster.local"
          - name: cluster.initial_master_nodes
            value: "elasticsearch-0.elasticsearch.myspace.svc.cluster.local,elasticsearch-1.elasticsearch.myspace.svc.cluster.local,elasticsearch-2.elasticsearch.myspace.svc.cluster.local"
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
