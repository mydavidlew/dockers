# [[[Deploying Kafka on Kubernetes]]]
# Kafka node discovery through Headless Service & Kafka cluster using StatefulSet
# https://kubernetes.io/docs/tutorials/stateful-application/zookeeper/
# https://medium.com/kafka-in-kubernetes/deploying-zookeeper-cluster-3acdcc7ed340
# https://portworx.com/blog/run-ha-kafka-rancher-kubernetes-engine/
# https://kubernetes.io/docs/tasks/inject-data-application/downward-api-volume-expose-pod-information/
# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
#
# <cmd> kubectl apply -f Kafka-deploy.yaml
# <cmd> kubectl port-forward -n myspace statefulset/Kafka 9092:9092
# <cmd> kubectl exec -i -t deploy/busybox -- nslookup ka-headless
#       Server:    10.96.0.10
#       Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local
#       Name:      ka-headless
#       Address 1: 10.244.3.26 kafka-2.ka-headless.myspace.svc.cluster.local
#       Address 2: 10.244.3.24 kafka-1.ka-headless.myspace.svc.cluster.local
#       Address 3: 10.244.3.23 kafka-0.ka-headless.myspace.svc.cluster.local
#
# <cmd> for i in 0 1 2; do echo "myid kafka-$i";kubectl exec kafka-$i -- cat /bitnami/kafka/data/meta.properties; done
# <cmd> for i in 0 1 2; do kubectl exec kafka-$i -- hostname -f; done
# <cmd> kubectl exec kafka-0 -- cat /opt/bitnami/kafka/config/server.properties
# <cmd> for i in 0 1 2; do kubectl get pod kafka-$i --template {{.spec.nodeName}}; echo ""; done
#
# kafka-storage.yaml
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: local-storage
# provisioner: rancher.io/local-path
# volumeBindingMode: WaitForFirstConsumer
# ---
# kafka-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ka-headless
  namespace: myspace
  labels:
    kaapp: ka-headless
    io.portainer.kubernetes.application.stack: sentiment
spec:
  clusterIP: None # Setting the clusterIP field in a service spec to 'None' makes the service headless.
  ports:
    - name: client
      port: 9092
      targetPort: 9092
      protocol: TCP
    - name: server
      port: 9093
      targetPort: 9093
      protocol: TCP
  selector:
    kaapp: kafka
---
# kafka-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: myspace
  labels:
    kaapp: ka-stateful
    io.portainer.kubernetes.application.stack: sentiment
spec:
  replicas: 3
  serviceName: ka-headless
  selector:
    matchLabels:
      kaapp: kafka
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: local-storage
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
  template:
    metadata:
      labels:
        kaapp: kafka
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: px/running
        #         operator: NotIn
        #         values:
        #         - "false"
        #       - key: px/enabled
        #         operator: NotIn
        #         values:
        #         - "false"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "kaapp"
                operator: In
                values: 
                - kafka
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: client
        - containerPort: 9093
          name: server
        resources:
          requests:
            memory: 1Gi
          limits:
            memory: 2Gi
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
#       - name: KAFKA_BROKER_ID
#         valueFrom:
#           fieldRef:
#             fieldPath: metadata.annotations['spec.pod.beta.kubernetes.io/statefulset-index']
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper-0.zk-headless.myspace.svc.cluster.local:2181,zookeeper-1.zk-headless.myspace.svc.cluster.local:2181
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - name: KAFKA_CFG_LISTENERS
          value: CLIENT://:9092,EXTERNAL://:9093
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: CLIENT://$(MY_POD_NAME).ka-headless.myspace.svc.cluster.local:9092,EXTERNAL://$(MY_NODE_NAME):9093
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: CLIENT
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        volumeMounts:
        - name: data
          mountPath: /bitnami/kafka
