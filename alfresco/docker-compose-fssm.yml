# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# But, as per Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D)
# If container memory is not explicitly set, then the above flags will default max heap to 1/4th of container's memory which may not be ideal.
# Hence, setting up explicit Container memory and then assigning a percentage of it to the JVM for performance tuning.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
    alfresco:
        image: mifocus-repo:443/midoc/fssm-repository:uat
        mem_limit: 1500m
        environment:
            JAVA_OPTS : "
                -Ddb.driver=com.mysql.jdbc.Driver
                -Ddb.username=\"midoc\"
                -Ddb.password='4$$MmU@D'
                -Ddb.url=\"jdbc:mysql://192.168.40.191:6446/midoc?useSSL=false&useUnicode=yes&characterEncoding=UTF-8\" 
                -Dsolr.host=solr6
                -Dsolr.port=8983
                -Dsolr.secureComms=none
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=stg-app4.fssm.local
		-Dshare.port=8084
                -Dalfresco.port=8082
                -Daos.baseUrlOverwrite=http://localhost:8082/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dcsrf.filter.enabled=false
                -Xms1g -Xmx2g
                "
        ports:
            - 8082:8080 #Browser port
        volumes:
            - ./data/alf_data:/usr/local/tomcat/alf_data
            - ./repo_configs/shared:/usr/local/tomcat/shared
        restart: unless-stopped

    share:
        image: mifocus-repo:443/midoc/fssm-share:uat
        mem_limit: 1500m
        environment:
            - REPO_HOST=alfresco
            - REPO_PORT=8080
            - "CATALINA_OPTS= -Xms500m -Xmx1g"
        ports:
            - 8084:8080
            - 8009:8009
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "5"
        restart: unless-stopped

#    postgres:
#        image: postgres:10.1
#        mem_limit: 1500m
#        environment:
#            - POSTGRES_PASSWORD=alfresco
#            - POSTGRES_USER=alfresco
#            - POSTGRES_DB=alfresco
#        command: postgres -c max_connections=300 -c log_min_messages=LOG
#        ports:
#            - 5432:5432
 #       volumes:
 #           - ./db/pgdata:/var/lib/postgresql/data

    solr6:
        image: alfresco/alfresco-search-services:1.3.0-RC2
        mem_limit: 2500m
        environment:
            #Solr needs to know how to register itself with Alfresco
            - SOLR_ALFRESCO_HOST=alfresco
            - SOLR_ALFRESCO_PORT=8080
            #Alfresco needs to know how to call solr
            - SOLR_SOLR_HOST=solr6
            - SOLR_SOLR_PORT=8983
            #Create the default alfresco and archive cores
            - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
            - "SOLR_JAVA_MEM=-Xms2g -Xmx2g"
        ports:
            - 8083:8983 #Browser port
        restart: unless-stopped

    activemq:
        image: alfresco/alfresco-activemq:5.15.6
        mem_limit: 2048m
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP
        restart: unless-stopped

